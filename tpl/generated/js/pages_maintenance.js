
// Component JS (converted to JS from TSX)
function Maintenance({page}) {
    return (
React.createElement('div', {className: 'page'}, React.createElement('div', {className: 'container container-tight py-4'}, React.createElement('div', {className: 'header-container text-center'}, React.createElement('a', {href: '/', className: 'navbar-brand navbar-brand-autodark'}, React.createElement('img', {src: '/static/img/logo.svg', height: '36', alt: 'OpenAgent'})), React.createElement('h2', {className: 'h3 text-muted'}, 'OpenAgent'), React.createElement('div', {className: 'col-12 text-center'}, React.createElement('p', {className: 'text-muted'}, 'System Maintenance'))), React.createElement('div', {className: 'card card-md'}, React.createElement('div', {className: 'card-body'}, React.createElement('div', {className: 'alert alert-warning mb-3'}, React.createElement('i', {className: 'ti ti-alert-triangle me-2'}), 'Server is in maintenance mode. PostgreSQL connection is required.'), '{page.Error && (', React.createElement('div', {className: 'alert alert-danger', role: 'alert'}, React.createElement('i', {className: 'ti ti-alert-circle me-2'}), '{page.Error}'), ')}
                    {page.Success && (', React.createElement('div', {className: 'alert alert-success', role: 'alert'}, React.createElement('i', {className: 'ti ti-check me-2'}), '{page.Success}'), ')}', React.createElement('form', {action: '/maintenance/configure', method: 'post'}, React.createElement('h2', {className: 'card-title text-center mb-4'}, 'Configuration & Version'), React.createElement('h4', {className: 'mt-4 mb-3'}, 'PostgreSQL Configuration'), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'PostgreSQL Host'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-server'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'db_host', value: '{page.DBHost}', placeholder: 'localhost', required: ''}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'PostgreSQL Port'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-network'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'db_port', value: '{page.DBPort}', placeholder: '5432', required: ''}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'PostgreSQL User'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-user'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'db_user', value: '{page.DBUser}', placeholder: 'postgres', required: ''}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'PostgreSQL Password'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-key'})), React.createElement('input', {type: 'password', className: 'form-control', name: 'db_password', value: '{page.DBPassword}', placeholder: 'Enter password'}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'Database Name'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-database'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'db_name', value: '{page.DBName}', placeholder: 'postgres', required: ''}))), React.createElement('hr', {className: 'my-4'}), React.createElement('h4', {className: 'mt-4 mb-3'}, 'Email (SMTP) Configuration'), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'SMTP Host'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-mail'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'smtp_host', value: '{page.SMTPHost}', placeholder: 'smtp.example.com'}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'SMTP Port'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-network'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'smtp_port', value: '{page.SMTPPort}', placeholder: '587'}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'SMTP Username'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-user'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'smtp_user', value: '{page.SMTPUser}', placeholder: 'username'}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'SMTP Password'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-key'})), React.createElement('input', {type: 'password', className: 'form-control', name: 'smtp_password', value: '{page.SMTPPassword}', placeholder: 'password'}))), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'From Email'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-mail-forward'})), React.createElement('input', {type: 'email', className: 'form-control', name: 'smtp_from', value: '{page.SMTPFrom}', placeholder: 'noreply@example.com'}))), React.createElement('hr', {className: 'my-4'}), React.createElement('h4', {className: 'mt-4 mb-3'}, 'App Version'), React.createElement('div', {className: 'row mb-3'}, React.createElement('div', {className: 'col'}, React.createElement('label', {className: 'form-label'}, 'Major'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-versions'})), React.createElement('input', {type: 'number', min: '0', className: 'form-control', name: 'version_major', value: '{page.VersionMajor}', required: ''}))), React.createElement('div', {className: 'col'}, React.createElement('label', {className: 'form-label'}, 'Minor'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-versions'})), React.createElement('input', {type: 'number', min: '0', className: 'form-control', name: 'version_minor', value: '{page.VersionMinor}', required: ''}))), React.createElement('div', {className: 'col'}, React.createElement('label', {className: 'form-label'}, 'Patch'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-versions'})), React.createElement('input', {type: 'number', min: '0', className: 'form-control', name: 'version_patch', value: '{page.VersionPatch}', required: ''}))), React.createElement('div', {className: 'col'}, React.createElement('label', {className: 'form-label'}, 'Build (Auto)'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-refresh'})), React.createElement('input', {type: 'number', className: 'form-control bg-light', value: '{page.VersionBuild}', readonly: ''})))), React.createElement('div', {className: 'text-muted small mb-3'}, React.createElement('i', {className: 'ti ti-info-circle me-1'}), 'The build number is automatically incremented on each server restart.'), React.createElement('hr', {className: 'my-4'}), React.createElement('h4', {className: 'mt-4 mb-3'}, 'Database Tools'), React.createElement('div', {className: 'mb-3'}, React.createElement('label', {className: 'form-label'}, 'Current Migration Number'), React.createElement('div', {className: 'input-group input-group-flat'}, React.createElement('span', {className: 'input-group-text'}, React.createElement('i', {className: 'ti ti-database-import'})), React.createElement('input', {type: 'text', className: 'form-control', name: 'migration_start', id: 'migration_start', value: '{page.MigrationStart}', placeholder: 'e.g. 007'})), React.createElement('div', {className: 'form-text text-muted small'}, React.createElement('i', {className: 'ti ti-info-circle me-1'}), 'The last applied migration number (format: 001-999). Will apply migrations after this number.')), React.createElement('div', {className: 'mb-3 form-check'}, React.createElement('input', {type: 'checkbox', className: 'form-check-input', id: 'reset_migrations', name: 'reset_migrations', value: '1', onchange: 'toggleMigrationStart()'}), React.createElement('label', {className: 'form-check-label', for: 'reset_migrations'}, 'Reset migration tracking (apply all migrations from beginning)'), React.createElement('div', {className: 'form-text text-muted small'}, React.createElement('i', {className: 'ti ti-info-circle me-1'}), 'Use this if you've deleted or recreated the database.')), React.createElement('div', {className: 'form-text text-muted mb-3'}, React.createElement('i', {className: 'ti ti-tool me-1'}), 'The "Initialize Database Schema" option will be automatically run if needed after saving configuration.'), React.createElement('div', {className: 'form-footer'}, React.createElement('button', {type: 'submit', className: 'btn btn-primary w-100'}, React.createElement('i', {className: 'ti ti-device-floppy me-1'}), 'Save Configuration & Restart'))))), React.createElement('div', {className: 'text-center text-muted mt-3'}, React.createElement('p', null, 'Need help? Contact your system administrator.'), React.createElement('p', {className: 'text-muted small'}, 'Version {page.VersionMajor}.{page.VersionMinor}.{page.VersionPatch}.{page.VersionBuild}'))))
    );
}

///////////////////////////////

// Original JS content

                        function toggleMigrationStart() {
                            const checkbox = document.getElementById('reset_migrations');
                            const migrationField = document.getElementById('migration_start');
                            
                            if (checkbox.checked) {
                                migrationField.disabled = true;
                                migrationField.value = '0';
                            } else {
                                migrationField.disabled = false;
                                migrationField.value = '{page.MigrationStart}';
                            }
                        }
                        


///////////////////////////////

// React hydration using common utilities
try {
    // Use the global hydration function from _common.js
    window.hydrateReactApp('Maintenance', { 
        page: window.pageData || {},
        container: 'main',
		layout: React.createElement('div', {}, 'Layout placeholder')
    });
} catch(e) {
    console.error('React hydration error:', e);
}